from typing import Tuple


# NOTE: I need setup sheets onOpen()
# send a done signal to the backend
# process the done signal
# Handle not creating another google sheet instance
# Generate a unique id assigned to a user id, so i know who to process the transactions for
# Create endpoint that listens for transaction signals
# start appending transactions
# and journal entries
# setup up  T account sheet
# setup trial balance sheet
# setup up other financial statements

def get_app_script() -> Tuple[str, str]:
    # "https://www.googleapis.com/auth/spreadsheets"
    # "https://www.googleapis.com/auth/script.container.ui",
  manifest = """
  {
    "timeZone": "America/New_York",
    "dependencies": {},
    "exceptionLogging": "STACKDRIVER",
    "runtimeVersion": "V8",
    "oauthScopes": ["https://www.googleapis.com/auth/spreadsheets.currentonly"]
  }
  """

  # Google app script
  app_script = """
  /*
  This code is auto generated by thinkledger. Do not edit without proper know how.
  */

  function onOpen() {
    // SpreadsheetApp.getUi()
    // .createMenu('Script')
    //  .addItem('Show Alert', 'testScript')
    //  .addToUi();
    // Setup sheets
    setupSheets();
  }

  function testScript() {
    SpreadsheetApp.getUi().alert('Hello from the scripted menu!');
  }

  function setupSheets() {
    const activeSpreadSheet = SpreadsheetApp.getActiveSpreadsheet();
    // ----- Setup transactions sheet -----
    setupTransactionSheet(activeSpreadSheet);
  }

  function setupTransactionSheet(activeSpreadsheet) {
    const sheetName = "Transactions";
    let sheet = activeSpreadsheet.getSheetByName(sheetName);
    if (!sheet) {
      // ----- Create sheet ----
      sheet = activeSpreadsheet.insertSheet(sheetName);

      // ----- Create main header -----
      const startRow = 1;
      const startCol = 1;
      const numRows = 4;
      const numCols = 6;

      try {
        const range = sheet.getRange(startRow, startCol, numRows, numCols);
        range.setValue(sheetName);
        range.merge()
        range.setHorizontalAlignment("center")
        range.setVerticalAlignment("middle")
      } catch(error) {
        SpreadsheetApp.getUi().alert(error);
      }

      //----- Create table -----
      const headers = ["ID", "Date", "Amount", "Institution", "Institution Account Name",
        "Institution Account Type", "Category", "Payment Channel", "Merchant Name", "Currency"];
    }
  }
  """
  ########## END ##########
  return app_script, manifest